#!/usr/bin/env ruby

require 'json'
require 'open-uri'
require 'optparse'

from_time = '5 minutes ago'

options = {}
options[:critical_pct] = 2
options[:warning_pct] = 0.5

OptionParser.new do |opts|

    opts.banner = "Usage: check_fastly_error_rate -a <api_key> -s <service_id>"
    opts.separator ""
    opts.separator "Specific options:"

    opts.on("-a", "--api-key API_KEY", "The API key to connect to Fastly") do |api_key|
        options[:api_key] = api_key
    end

    opts.on("-s", "--service SERVICE_ID", "The Fastly Service ID to check") do |service_id|
        options[:service_id] = service_id
    end

    opts.on("-w", "--warning WARNING_PERCENT", "The percentage errors which creates a warning") do |warning_pct|
        options[:warning_pct] = warning_pct
    end

    opts.on("-c", "--critical CRITICAL_PERCENT", "The percentage errors which creates a critical") do |critical_pct|
        options[:critical_pct] = critical_pct
    end

    opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit 3
    end

end.parse!

uri = URI.parse("https://api.fastly.com/stats/service/#{options[:service_id]}")
params = { :from => from_time, :by => 'minute' }
uri.query = URI.encode_www_form(params)
response = open(uri, 'Fastly-Key' => options[:api_key])
stats = JSON.parse(response.read)

requests = 0
errors = 0

stats['data'].each { |stat|
    requests += stat['requests'].to_i
    errors += stat['errors'].to_i
}
error_pct = ( errors.to_f * 100 ) / requests.to_f

if error_pct > options[:critical_pct].to_f then
    puts "CRITICAL: CDN Error rate is over #{options[:critical_pct]}% (5min avg is #{error_pct}%)"
    exit 2
elsif error_pct > options[:warning_pct].to_f then
    puts "WARNING: CDN Error rate is over #{options[:warning_pct]}% (5min avg is #{error_pct}%)"
    exit 1
else
    puts "OK: CDN Error rate is #{error_pct}%"
    exit 0
end

