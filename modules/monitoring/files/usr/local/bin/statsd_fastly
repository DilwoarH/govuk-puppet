#!/usr/bin/env ruby

require 'json'
require 'open-uri'
require 'optparse'
require 'statsd-ruby'

minutes = 5
from_time = "#{minutes} minutes ago"

options = {}

OptionParser.new do |opts|

    opts.banner = "Usage: statsd_fastly -a <api_key> -s <service_id>"
    opts.separator ""
    opts.separator "Specific options:"

    opts.on("-a", "--api-key API_KEY", "The API key to connect to Fastly") do |api_key|
        options[:api_key] = api_key
    end

    opts.on("-s", "--service SERVICE_ID", "The Fastly Service ID to check") do |service_id|
        options[:service_id] = service_id
    end

    opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit 3
    end

end.parse!

# Get the Service Name
uri = URI.parse("https://api.fastly.com/service/#{options[:service_id]}/details")
response = open(uri,'Fastly-Key' => options[:api_key])
details = JSON.parse(response.read)
options[:name] = details['name'].downcase.gsub(/ /, '_').gsub(/\./,'')

uri = URI.parse("https://api.fastly.com/stats/service/#{options[:service_id]}")
params = { :from => from_time, :by => 'minute' }
uri.query = URI.encode_www_form(params)
response = open(uri, 'Fastly-Key' => options[:api_key])
stats = JSON.parse(response.read)

requests = 0
errors = 0

results = {}
stats['data'].each { |stat|
    stat.each { |key, value|
        if key != 'service_id'
            if results.has_key?(key)
                results[key] += value.to_f
            else
                results[key] = value.to_f
            end
        else
            results[key] = value.to_s
        end
    }
}

stats_collector = 
    Statsd.new("localhost", 8125).tap do |c|
        c.namespace = "fastly.#{options[:name]}.5min_avg"
    end

results.each { |key,value|
    if key != 'service_id'
        avg_value = value / minutes
        stats_collector.gauge(key, avg_value)
    end
}
