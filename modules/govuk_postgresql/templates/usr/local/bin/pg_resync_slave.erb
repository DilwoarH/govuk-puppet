#!/usr/bin/env bash
set -eu

DATADIR="<%= @pg_datadir %>"
SYNCDIR="${DATADIR}.sync"
DATADIR_DELETE="${DATADIR}.todelete"

if [ -z ${DATADIR} ]; then
  echo "DATADIR variable is empty"
  exit 1
fi

if [ "$(id -u)" -ne "0" ]; then
  echo "Please run with sudo"
  exit 1
fi

sudo -u <%= @pg_user %> rm -rf ${SYNCDIR} ${DATADIR_DELETE}
sudo -u <%= @pg_user %> pg_basebackup -vP \
  -h <%= @master_host %> -U <%= @username %> \
  -D ${SYNCDIR}

service postgresql stop

# Files that don't exist in the basebackup and must be retained from the
# slave's original data directory.
sudo -u <%= @pg_user %> mv -t ${SYNCDIR}/ \
  ${DATADIR}/pg_xlog \
  ${DATADIR}/server.crt \
  ${DATADIR}/server.key \
  ${DATADIR}/recovery.tmp \
  ${DATADIR}/postmaster.opts

# Delay deletion and move instead of copy so that the service is down for
# the minimal amount of time possible.
sudo -u <%= @pg_user %> mv ${DATADIR} ${DATADIR_DELETE}
sudo -u <%= @pg_user %> mv ${SYNCDIR} ${DATADIR}

# Copy replication config, in case it's a new machine or the details have
# changed since it was last replicated.
sudo -u <%= @pg_user %> cp -a ${DATADIR}/recovery.tmp ${DATADIR}/recovery.conf
service postgresql start

sudo -u <%= @pg_user %> rm -rf ${DATADIR_DELETE}
