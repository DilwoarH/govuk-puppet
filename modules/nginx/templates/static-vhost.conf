# This file is managed by Puppet. Local changes will be clobbered.
upstream <%= name %>-proxy {
  server <%= @to %>;
}

server {
  server_name <%= name %> <%= server_names.join(" ") unless server_names.empty? %>;
  listen 80;

  access_log /var/log/nginx/<%= name %>-access.log timed_combined;
  error_log /var/log/nginx/<%= name %>-error.log;
  add_header Vary Accept-Encoding;

  <%- if ssl_only -%>
  listen               443;
  ssl                  on;
  ssl_certificate      /etc/nginx/ssl/<%= name %>.crt;
  ssl_certificate_key  /etc/nginx/ssl/<%= name %>.key;
  include              /etc/nginx/ssl.conf;
  keepalive_timeout    70;
  <%- end -%>

  proxy_set_header Host $http_host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Host $host;
  proxy_redirect off;

  <%- if protected -%>
  auth_basic            "Enter your betademo password";
  auth_basic_user_file  /etc/govuk.htpasswd;
  <%- end -%>

  location @app {
    proxy_pass http://<%= name %>-proxy;
  }

  location / {
    gzip_http_version 1.0;
    gzip_static on;
    add_header Cache-Control public;
    expires max;
    root /data/vhost/<%= name %>/current/public;
    try_files $uri/index.html $uri.html $uri @app;
  }

  <% aliases.each do |alias_name| -%>
  location /<%= alias_name %>/ {
    gzip_http_version 1.0;
    gzip_static on;
    add_header Cache-Control public;
    expires max;
    alias /data/vhost/<%= alias_name %>.<%= @app_domain %>/current/public/<%= alias_name %>/;
  }
  <% end -%>

  location /fonts {
    gzip_http_version 1.0;
    gzip_static on;
    expires 1y;
    add_header Cache-Control public;

    proxy_pass http://<%= name %>-proxy;

    <%- if govuk_platform == "production" -%>
      add_header "Access-Control-Allow-Origin" "https://www.gov.uk";
    <%- else -%>
      add_header "Access-Control-Allow-Origin" "https://www.<%= @app_domain %>";
    <%- end -%>
  }

  <%= extra_root_config %>
}


<% if health_check_port != 'NOTSET' %>
server {
  server_name _ ;

  listen                    <%= health_check_port %>;

  proxy_set_header Host <%= name %>;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Host $host;
  proxy_redirect off;

  access_log /var/log/nginx/<%= name %>-http-health-check-access.log timed_combined;
  error_log /var/log/nginx/<%= name %>-http-health-check-error.log;

  location / {
    satisfy any;
    proxy_pass http://<%= name %>-proxy<%= health_check_path %>;
  }
}
<% end %>

<% if ssl_health_check_port != 'NOTSET' %>
server {

  listen              <%= ssl_health_check_port %> ssl;
  ssl_certificate     /etc/nginx/ssl/<%= name %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= name %>.key;
  include             /etc/nginx/ssl.conf;

  proxy_set_header Host <%= name%>;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Host $host;
  proxy_redirect off;

  access_log /var/log/nginx/<%= name %>-https-health-check-access.log timed_combined;
  error_log /var/log/nginx/<%= name %>-https-health-check-error.log;

  location / {
    #TODO: See what ips we need to allow
    satisfy any;
    proxy_pass http://<%= name %>-proxy<%= health_check_path %>;
  }

}
<% end %>
