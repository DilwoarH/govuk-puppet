[nginx_access-default]
type = "LogstreamerInput"
parser_type = "token"
log_directory = "/var/log/nginx"
file_match = 'json\.event\.access\.log\.?(?P<Index>\d+)?(\.gz)?'
differentiator = ["default"]
priority = ["^Index"]
decoder = "nginx_access_decoder"
hostname = "<%= @fqdn_underscore -%>"

[nginx_access-vhosts]
type = "LogstreamerInput"
parser_type = "token"
log_directory = "/var/log/nginx"
file_match = '(?P<LogBasename>.+)-json\.event\.access\.log\.?(?P<Index>\d+)?(\.gz)?'
differentiator = ["LogBasename"]
priority = ["^Index"]
decoder = "nginx_access_decoder"
hostname = "<%= @fqdn_underscore -%>"

[nginx_access_decoder]
type = "SandboxDecoder"
filename = "lua_decoders/json_event.lua"

[nginx_access_decoder.config]
type = "nginx.access"


[nginx_error-default]
type = "LogstreamerInput"
parser_type = "token"
log_directory = "/var/log/nginx"
file_match = 'error\.log\.?(?P<Index>\d+)?(\.gz)?'
differentiator = ["default", "-error"]
priority = ["^Index"]
decoder = "nginx_error_decoder"
hostname = "<%= @fqdn_underscore -%>"

[nginx_error-vhosts]
type = "LogstreamerInput"
parser_type = "token"
log_directory = "/var/log/nginx"
file_match = '(?P<LogBasename>.+)-error\.log\.?(?P<Index>\d+)?(\.gz)?'
differentiator = ["LogBasename", "-error"]
priority = ["^Index"]
decoder = "nginx_error_decoder"
hostname = "<%= @fqdn_underscore -%>"

[nginx_error_decoder]
type = "SandboxDecoder"
filename = "lua_decoders/nginx_error.lua"

[nginx_error_decoder.config]
type = "nginx.error"


[nginx_access_stats]
type = "StatAccumInput"
ticker_interval = 1

[nginx_access_stat]
type = "StatFilter"
stat_accum_name = "nginx_access_stats"
message_matcher = 'Hostname == "<%= @fqdn_underscore -%>" && Type == "nginx.access" && Fields[request_time] != NIL && Fields[status] > 0'

[nginx_access_stat.Metric.status_code]
type = "Counter"
name = "%Hostname%.nginx.%Logger%.http_%status%"
value = "1"

[nginx_access_stat.Metric.request_time]
type = "Timer"
name = "%Hostname%.nginx.%Logger%.request_time"
value = "%request_time%"
