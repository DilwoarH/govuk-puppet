keepalive_timeout 120;

proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-Server $host;
proxy_set_header X-Forwarded-Host $http_host;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_redirect off;
<% if @real_ip_header != '' -%>

# Use an unspoofable header from an upstream CDN or L7 load balancer.
real_ip_header <%= @real_ip_header -%>;
real_ip_recursive on;
set_real_ip_from 0.0.0.0/0;
<% end -%>

# Limit requests and connections based on $remote_addr.
# NB: This may not be accurate if there is a L3 load balancer upstream and
# real_ip_header cannot be set!
limit_req zone=rate burst=5 nodelay;
limit_conn connections 4;

proxy_read_timeout 20;

access_log /var/log/nginx/lb-access.log timed_combined;
access_log /var/log/nginx/lb-json.event.access.log json_event;
error_log  /var/log/nginx/lb-error.log;

location ~ ^/apply-for-a-licence/? {
  proxy_intercept_errors off;

  # Set proxy timeout to 50 seconds as a quick fix for problems
  # where civica QueryPayments calls are taking too long.
  proxy_read_timeout 50;
  proxy_pass http://varnish;
}

location ~ ^/apply-for-a-licence/assets/ {
  limit_req zone=rate burst=5 nodelay;
  limit_conn connections 25;
  proxy_pass http://varnish;
}

location ~ ^/performance/graphs/ {
  limit_req zone=rate burst=25 nodelay;
  proxy_pass http://varnish;
}
location ~ ^/performance/.+\.(json|png)$ {
  limit_req zone=rate burst=25 nodelay;
  proxy_pass http://varnish;
}

location ~ ^/contact/govuk/(service-feedback|problem_reports)$ {
  limit_req zone=contact burst=4 nodelay;
  proxy_pass http://varnish;
}

location / {
  <%- if @vhost_protected -%>

      deny all;
      auth_basic            "Enter the GOV.UK username/password (not your personal username/password)";
      auth_basic_user_file  /etc/govuk.htpasswd;
      satisfy any;

  <%- end -%>

  proxy_pass http://varnish;
}

error_page 400 /400.html;
error_page 404 401 /404.html;
error_page 406 /406.html;
error_page 410 /410.html;
error_page 418 /418.html;
error_page 500 502 /500.html;
error_page 503 /503.html;
error_page 504 /504.html;

# Serve a friendly error for rate limited requests. Maintains backwards
# compat because these previously emitted 503.
# FIXME: Mainstream to provide a new page for this.
error_page 429 /503.html;

# Set Cache-Control headers on 404 pages since we overide those set by apps.
# So that we dont fall through to the default provided by the CDN.
more_set_headers -s 404 "Cache-Control: public, max-age=900";

location /400.html {
  root /usr/share/nginx/www;
  internal;
}
location /404.html {
  root /usr/share/nginx/www;
  internal;
}
location /406.html {
  root /usr/share/nginx/www;
  internal;
}
location /410.html {
  root /usr/share/nginx/www;
  internal;
}
location /418.html {
  root /usr/share/nginx/www;
  internal;
}
location /500.html {
  root /usr/share/nginx/www;
  internal;
}
location /503.html {
  root /usr/share/nginx/www;
  internal;
}
location /504.html {
  root /usr/share/nginx/www;
  internal;
}
