---
- scm:
    name: env-sync-and-backup_Copy_Data_to_Production
    scm:
        - git:
            url: git@github.com:alphagov/env-sync-and-backup.git
            branches:
              - master

- job:
    name: Copy_Data_from_Production_to_AWS
    display-name: Copy_Data_from_Production_to_AWS
    project-type: freestyle
    description: |
        This job copies databases from production to AWS. It runs nightly and
        can be run in an ad-hoc fashion. It doesn't copy the signon or
        performance-platform databases.
    properties:
        - github:
            url: https://github.com/alphagov/env-sync-and-backup/
        - inject:
            properties-content: |
              PARALLEL_JOBS=3
        - build-discarder:
            days-to-keep: 30
            artifact-num-to-keep: 5
    scm:
      - env-sync-and-backup_Copy_Data_from_Production_to_AWS
    logrotate:
        numToKeep: 10
    triggers:
        - timed: |
            TZ=Europe/London
            H 11 * * *
    builders:
        - shell: |
            set +x
            cd "${WORKSPACE}"

            echo "Putting in the real MySQL root password"
            sed -i.bak "s/MYSQL_SRC_ROOT_PW=PLACEHOLDER/MYSQL_SRC_ROOT_PW='<%= @mysql_src_root_pw %>'/g" scripts/sync-mysql.sh
            sed -i "s/MYSQL_DST_ROOT_PW=PLACEHOLDER/MYSQL_DST_ROOT_PW='<%= @mysql_dst_root_pw %>'/g" scripts/sync-mysql.sh

            echo "Putting in the real Postgresql env-sync password"
            sed -i.bak "s/PG_SRC_ENV_SYNC_PW=PLACEHOLDER/PG_SRC_ENV_SYNC_PW='<%= @pg_src_env_sync_pw %>'/" scripts/sync-postgresql.sh
            sed -i "s/PG_DST_ENV_SYNC_PW=PLACEHOLDER/PG_DST_ENV_SYNC_PW='<%= @pg_dst_env_sync_pw %>'/" scripts/sync-postgresql.sh

            set +e

            echo "Disabling Gor traffic replay"
            for box in $(govuk_node_list -C 'govuk_gor'); do
              ssh deploy@${box} 'echo "true" > /etc/govuk/env.d/FACTER_data_sync_in_progress; sudo initctl stop gor';
            done

            echo "Running Data Sync"
            bash sync production aws
            EXITCODE=$?

            echo "Re-enabling Gor traffic replay"
            for box in $(govuk_node_list -C 'govuk_gor'); do
              ssh deploy@${box} 'echo "" > /etc/govuk/env.d/FACTER_data_sync_in_progress; sudo initctl start gor';
            done

            exit $EXITCODE
    publishers:
      - trigger-parameterized-builds:
        - project: Success_Passive_Check
          condition: 'SUCCESS'
          predefined-parameters: |
            NSCA_CHECK_DESCRIPTION=<%= @service_description %>
            NSCA_OUTPUT=<%= @service_description %> success
        - project: Failure_Passive_Check
          condition: 'FAILED'
          predefined-parameters: |
            NSCA_CHECK_DESCRIPTION=<%= @service_description %>
            NSCA_OUTPUT=<%= @service_description %> failed
        - project: trigger_data_sync_complete
          condition: 'ALWAYS'
          predefined-parameters: |
            HOSTNAME=deploy.blue.staging.govuk.digital
            API_KEY=<%= @ci_alphagov_api_key %>
            AUTH_TOKEN=<%= @auth_token %>
    wrappers:
        - ansicolor:
            colormap: xterm
        - timestamps
    parameters:
        - choice:
            name: JOBLIST
            description: 'Choose the thing to sync. All is the default, but some jobs may run but not do anything due to your config for the destination environment.'
            choices:
                - all
                - elasticsearch-rummager
                - mongo-api
                - mongo-normal
                - mongo-router
                - mysql-normal
                - mysql-whitehall
                - postgresql-backend
                - postgresql-transition
