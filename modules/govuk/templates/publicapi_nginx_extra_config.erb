
  # Specify these locations regexfully to avoid quirky Nginx behaviour
  # where a location block with a trailing slash triggers 301 redirects on
  # requests made to that path without a trailing slash, *if* there is a
  # proxy_pass directive in the block.

  location ~ ^/api/(organisations|specialist|worldwide-organisations|world-locations)(/|$) {
    expires 30m;

    proxy_set_header Host <%= @whitehallapi %>;
    proxy_pass https://<%= @whitehallapi %>;
  }

  location ~ ^/api/facts(/|$) {
    expires 30m;

    # Remove the prefix before passing through
    # Can't just do this using the proxy_pass URL, because we're
    # having to match the incoming path on a regular expression
    rewrite ^/api/?(.*) /$1 break;

    proxy_set_header Host <%= @factcaveapi %>;
    proxy_set_header API-PREFIX api;
    proxy_pass https://<%= @factcaveapi %>;
  }

  location ~ ^/api(/|$) {
    expires 30m;

    # Remove the prefix before passing through
    # Can't just do this using the proxy_pass URL, because we're
    # having to match the incoming path on a regular expression
    rewrite ^/api/?(.*) /$1 break;

    proxy_set_header Host <%= @privateapi %>;
    proxy_set_header API-PREFIX api;
    proxy_set_header Authorization  "";
    proxy_pass https://<%= @full_domain %>-proxy;
  }

  location ~ ^/performance/(.*)/api/(.*) {
    rewrite ^/performance/(.*)/api/(.*)$ /data/$1/$2 break;

    proxy_ssl_session_reuse off;
    proxy_set_header Host <%= @backdropread_host %>;
    proxy_pass <%= @backdropread_url %>;
  }
