#!/bin/sh

if [ "$#" -ne "2" ]; then
  echo "Usage: $(basename "$0") <appname> <apptype>"
  exit 1
fi

[ -f /etc/environment ] && . /etc/environment

[ -z "$GOVUK_RUN_AS_USER" ]     && GOVUK_RUN_AS_USER="deploy"
[ -z "$GOVUK_RUN_AS_GROUP" ]    && GOVUK_RUN_AS_GROUP="deploy"
[ -z "$FACTER_govuk_platform" ] && FACTER_govuk_platform=""

status () {
  echo "---> ${@}" >&2
}

error () {
  echo "ERROR: ${@}" >&2
  exit 1
}

NAME="$1"
TYPE="$2"

set -eu

APP_ROOT="/var/apps/${NAME}"
APP_RUN="/var/run/${NAME}"

if [ -z "$FACTER_govuk_platform" ]; then
  error "The FACTER_govuk_platform environment variable must be set!"
fi

export FACTER_govuk_platform

# RAILS_ENV and friends are "production" in preview.
if [ "$FACTER_govuk_platform" = "development" ]; then
  GOVUK_ENV="development"
else
  GOVUK_ENV="production"
fi
export GOVUK_ENV

status "Spinning up '${NAME}' (type ${TYPE}) in '${GOVUK_ENV}' environment"

cd "$APP_ROOT"

if [ "$TYPE" = "procfile" ]; then
  status "Spawning 'web' task from Procfile"
  CMD=$(<Procfile grep '^web:' | cut -d':' -f2-)
elif [ "$TYPE" = "rack" ]; then
  status "Spawning rack app under unicorn"
  export RACK_ENV="$GOVUK_ENV"
  CMD="bundle exec unicorn -p \$PORT"
  if [ -e "${APP_ROOT}/config/unicorn.rb" ]; then
    CMD="$CMD -c \"${APP_ROOT}/config/unicorn.rb\""
  fi
elif [ "$TYPE" = "rails" ]; then
  status "Spawning Rails 3 app under unicorn_rails"
  export RACK_ENV="$GOVUK_ENV"
  export RAILS_ENV="$GOVUK_ENV"
  CMD="bundle exec unicorn_rails -p \$PORT"
  if [ -e "${APP_ROOT}/config/unicorn.rb" ]; then
    CMD="$CMD -c \"${APP_ROOT}/config/unicorn.rb\""
  fi
else
  error "unknown app type '${TYPE}'!"
fi

exec \
  envmgr -n "$NAME" \
  start-stop-daemon --start \
                    --chuid "$GOVUK_RUN_AS_USER:$GOVUK_RUN_AS_GROUP" \
                    --chdir "$APP_ROOT" \
                    --pidfile "${APP_RUN}/app.pid" \
                    --make-pidfile \
                    --startas "/bin/sh" \
                    -- -c "exec $CMD"
