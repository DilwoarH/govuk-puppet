#!/bin/bash
# Script to push backups offsite.
set -e
set -o pipefail

# Defaults, assumed failed.
NAGIOS_CODE=2
NAGIOS_MESSAGE="CRITICAL: Backup failed"

# Triggered whenever this script exits, successful or otherwise. The values
# of CODE/MESSAGE will be taken from that point in time.
function nagios_passive () {
  printf "<%= @fqdn %>\t<%= @service_desc %>\t${NAGIOS_CODE}\t${NAGIOS_MESSAGE}\n" | /usr/sbin/send_nsca -H nagios.cluster >/dev/null
}
trap nagios_passive EXIT

STARTEPOCH=$(date +'%s')
APPNAME=$(basename $0)

GPG_KEY='13B84C37AB52D76B3F53CF0E7C34BD7A05119BA4'

BKP_DIR="/data/backups/"
MYSQL_BKP="/var/lib/automysqlbackup/latest.tbz2"
MONGO_BKP="/var/lib/automongodbbackup/latest"

LIC_HOST="licensify-mongo-1.licensify.production"
MONDB_HOST="mongo-1.backend.production"
MYDB_HOST="mysql-slave-1.backend.production"
EFGMYDB_HOST="efg-mysql-slave-1.efg.production"

TAR_OPTS="cf -"
TAR_OPTS="$TAR_OPTS ${BKP_DIR}${MONDB_HOST}${MONGO_BKP}"
TAR_OPTS="$TAR_OPTS ${BKP_DIR}${MYDB_HOST}${MYSQL_BKP}"
TAR_OPTS="$TAR_OPTS ${BKP_DIR}${EFGMYDB_HOST}${MYSQL_BKP}"
# The following line can be uncommented when Tony says it is OK
# to copy the Licensify Backups offsite
# TAR_OPTS="$TAR_OPTS ${BKP_DIR}${LIC_HOST}${MONGO_BKP}"

GPG_OPTS="-q --yes --batch --trust-model always --cipher-algo AES256 --encrypt -r ${GPG_KEY}"
DEST="offsite-backup.production.alphagov.co.uk"
FILENAME="govuk-backup-$(date +%Y%m%d).tar.gpg"
SSH_OPTS="-C -o VisualHostKey=no"

gpg -q --recv-keys $GPG_KEY 2>/dev/null
tar $TAR_OPTS 2>/dev/null | gpg $GPG_OPTS | ssh $SSH_OPTS $DEST "cat > $FILENAME"
if [ $? == 0 ]; then
  NAGIOS_CODE=0
  NAGIOS_MESSAGE="OK: Backup successful"
fi

FINISHEPOCH=$(date +'%s')
TOTALTIME=$(expr $FINISHEPOCH - $STARTEPOCH)

MESSAGE="Offsite backups completed in T:$TOTALTIME seconds"
logger -t $APPNAME $MESSAGE
