#!/bin/bash
# Script to backup a directory to memset's memstore using duplicity.
# Currently only does a full on initial backup then incrementals afterwards
#
# needs a credentials file which should contain the following
#
# export CLOUDFILES_USERNAME=redacted
# export CLOUDFILES_APIKEY=redacted
# export PASSPHRASE=redacted
# 
# taken from https://github.gds/gds/memstore-backup



#defaults
CREDENTIALS="credentials"
LOGFILE=/var/log/duplicity.log

while getopts "c:d:l:vh" option
do
  case $option in
   c ) CREDENTIALS=$OPTARG ;; 
   d ) DIRTOBACKUP=$OPTARG ;;
   l ) LOGFILE=$OPTARG ;;
   v ) VERBOSE=1 ;; 
   h ) HELP=1 ;;
   * ) HELP=1 ;;
  esac
done

if [[ -z $DIRTOBACKUP ]]
then
  echo "no path given"
  exit 1
fi
if [[ ! -d $DIRTOBACKUP ]]
then
  echo "path doesnt exist" 
  exit 1
fi
if [[ ! -f $CREDENTIALS ]]
then
  echo "credentials file doesnt exist"
  exit 1
fi
if [ "$HELP" = "1" ]
then
  echo "backup a directory to memstore"
  echo "-c credentials file. Defaults to credentials"
  echo "-d directory to backup"
  echo "-l logfile. defaults to /var/log/duplicity.log"
  echo "-v be verbose"
  echo "-h this help message"
  exit 0
fi
APPNAME=$(basename $0)
DIRNAME=`basename $DIRTOBACKUP`
# activity log
LOG=$LOGFILE
# duplicity will create that container for you
UPLOAD_TO_CONTAINER=backup-$DIRNAME

export CLOUDFILES_AUTHURL=https://auth.storage.memset.com/v1.0
source $CREDENTIALS

# make it be very quiet.
if [  -z $VERBOSE ] 
then
DUPLICITY_OPTIONS="--no-print-statistics -v 0"
else
DUPLICITY_OPTIONS=""
fi


STARTEPOCH=$(date +'%s')

duplicity $DUPLICITY_OPTIONS --log-file=$LOG $DIRTOBACKUP cf+http://$UPLOAD_TO_CONTAINER
DUPLICITY_EXIT_CODE=$?
FINISHEPOCH=$(date +'%s')
TOTALTIME=$(expr $FINISHEPOCH - $STARTEPOCH)

if [ "$DUPLICITY_EXIT_CODE" = "0" ]
then
  MESSAGE="$APPNAME: $DIRBACKUP backed up in T:$TOTALTIME seconds"
  logger -i -t $APPNAME $MESSAGE
  if [ ! -z $VERBOSE ]
  then
    echo $MESSAGE
  fi
else
  MESSAGE="$APPNAME: $DIRBACKUP failed in T:$TOTALTIME seconds"
  logger -i -t $APPNAME $MESSAGE
  if [ ! -z $VERBOSE ]
  then
    echo $MESSAGE
  fi
fi

exit $DUPLICITY_EXIT_CODE

