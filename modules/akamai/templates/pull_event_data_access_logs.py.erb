from suds import WebFault
import suds
from suds.client import Client
from datetime import datetime, timedelta
import logging

logging.basicConfig(level=logging.INFO)
logging.getLogger('suds.client').setLevel(logging.WARN)

# - make username and password separate
# - pass into syslog
# - periodicity / state (how much have we got already)
# - what events are we picking up
# - puppetise
# - do proper exception handling of transport layer errors

URL = 'https://control.akamai.com/nmrws/services/EventData?wsdl'

def initiate_client():
    client = Client(URL, username='<%= @akamai_webservice_username %>', password='<%= akamai_webservice_password %>')
    return client

def request_event_data(client, start, end):
    """TODO: introduce transport layer exception handling
    """
    response = client.service.getEdgeControlAlertsEvents(start, end)
    return response

def main():
    now = datetime.now()
    yesterday = now - timedelta(days=1)
    results = request_event_data(initiate_client(), yesterday, now)
    for item in results:
        print item.action + " " + item.eventTime

if __name__ == '__main__':
    main()
