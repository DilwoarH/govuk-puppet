#!/bin/sh

set -eu

PROG="$(basename "$0")"

ECRYPTFS_KEY_BYTES="16"
ECRYPTFS_OPTS="ecryptfs_key_bytes=${ECRYPTFS_KEY_BYTES},ecryptfs_cipher=aes,ecryptfs_passthrough=n,ecryptfs_enable_filename_crypto=n"
FSTAB_OPTS="rw,noauto,user"

usage () {
  echo "Usage: $PROG <pathname>"
  echo
  echo "Creates an ecryptfs volume with a randomly generated password at the"
  echo "specified path, with default options."
  echo
  echo "$PROG will fail if the path specified already exists."
}

random_passphrase () {
  bytes=$1
  od -x -N $bytes --width=$bytes /dev/urandom | head -n 1 | sed "s/^0000000//" | sed "s/\s*//g"
}

if [ "$(id -u)" -ne "0" ]; then
  echo "ERROR: must be run as root" >&2
  exit 1
fi

if [ "$#" -ne "1" ]; then
  usage >&2
  exit 1
fi

case $1 in
  -h|--help)
    usage
    exit
  ;;
esac

DEST="$1"

if [ -e "$DEST" ]; then
  echo "ERROR: $DEST already exists, refusing to create ecryptfs volume!" >&2
  exit 1
fi

mkdir "$DEST"
cd "$DEST"
DEST="$(pwd)"
cd /

if grep -Fq "$DEST" /etc/fstab; then
  echo "ERROR: $DEST already referenced by /etc/fstab, refusing to create ecryptfs volume!" >&2
  exit 1
fi

PASSPHRASE="$(random_passphrase "$ECRYPTFS_KEY_BYTES")"
RESPONSE="$(printf "%s" "$PASSPHRASE" | ecryptfs-add-passphrase -)"
SIG="$(echo "$RESPONSE" | grep "Inserted auth tok" | sed "s/^.*\[//" | sed "s/\].*$//")"

mount -i -t ecryptfs -o "${ECRYPTFS_OPTS},ecryptfs_sig=${SIG},no_sig_cache" "$DEST" "$DEST"

echo "---> Creating entry in /etc/fstab for ${DEST}:" >&2
echo "${DEST} ${DEST} ecryptfs ${FSTAB_OPTS},${ECRYPTFS_OPTS},ecryptfs_sig=${SIG} 0 0" >> /etc/fstab

umount "$DEST"

echo "---> All done" >&2
echo >&2
echo "You must save your passphrase somewhere safe. It is:" >&2
echo "    $PASSPHRASE" >&2
echo >&2
echo "You should now be able to mount and unmount your ecryptfs volume as an" >&2
echo "ordinary user with:" >&2
echo >&2
echo "    ecryptfs-add-passphrase # (enter passphrase when prompted)" >&2
echo "    mount -i ${DEST}" >&2
echo "    umount ${DEST}" >&2
