# -*- mode: ruby -*-
# vi: set ft=ruby:

#
# NB: please don't use ruby 1.9 syntax in this file until the default system
#     ruby shipping with Mac OS X becomes ruby 1.9
#

has_old_vagrant = !Vagrant.respond_to?(:configure)

def common_config(config)
  # vagrant-dns is only supported on OS X
  # https://github.com/BerlinVagrant/vagrant-dns/blob/master/PLATFORM_SUPPORT.md
  if RUBY_PLATFORM =~ /darwin/i
    config.dns.tld = "dev.gov.uk"
    config.dns.patterns = [/^.*dev.gov.uk$/]
  end

  config.ssh.forward_agent = true

  config
end

def virtual_box_config(config)
  latest_box_versions = {
    'lucid'   => '20130712',
    'precise' => '20130712',
  }

  if (ENV['govuk_dev_dist'].nil?)
    puts "[info] Environment variable govuk_dev_dist not set, using Ubuntu 12.04"
    puts "       please set govuk_dev_dist='lucid' or govuk_dev_dist='precise' in your "
    puts "       environment variables to change versions. e.g.:"
    puts "       #> echo \"export govuk_dev_dist='lucid'\" >> ~/.bash_profile "
    dist = 'precise'
  else
    dist = ENV['govuk_dev_dist']
  end

  virtual_box_box = "govuk_dev_#{dist}64_#{latest_box_versions[dist]}"

  config.vm.box = virtual_box_box
  config.vm.box_url = "http://gds-boxes.s3.amazonaws.com/#{virtual_box_box}.box"

  config
end

def load_local_vagrant_file(config)
  # Load local overrides
  if File.exist? 'Vagrantfile.local'
    $stderr.puts "WARNING: Vagrantfile.local is deprecated! Please use Vagrantfile.localconfig instead."
    $stderr.puts ""
  end

  if File.exist? 'Vagrantfile.localconfig'
    instance_eval File.read('Vagrantfile.localconfig'), 'Vagrantfile.localconfig'
  end

  config
end

if has_old_vagrant
  $stderr.puts "WARNING: Using old Vagrantfile format! Please upgrade to Vagrant >1.1."
  $stderr.puts ""

  # Vagrant 1.0.x
  Vagrant::Config.run do |config|
    config = virtual_box_config(config)
    config = common_config(config)

    # Old Vagrant uses `host_name`
    config.vm.host_name = ENV['VAGRANT_HOSTNAME'] || 'vm'

    config.vm.customize ["modifyvm", :id, "--rtcuseutc", "on"]

    # Static IP for NFS and DNS
    config.vm.network :hostonly, ip: "10.1.1.254"

    config.vm.share_folder "govuk", "/var/govuk", "..", :nfs => true

    # You may want to up the memory / CPUs to get better performance
    # in the VM.
    # Example given below to put in Vagrantfile.localconfig if you want to
    # do so.
    # config.vm.customize [ "modifyvm", :id, "--memory", "1024", "--cpus", "2" ]

    config = load_local_vagrant_file(config)
  end
else

  # Vagrant 1.1/1.2
  Vagrant.configure("2") do |config|
    config = virtual_box_config(config)

    # TODO: build VMWare base boxes - for now we use a generic precise
    config.vm.provider :vmware_fusion do |vm, override|
      override.vm.box = "precise64_vmware_fusion"
      override.vm.box_url = "http://files.vagrantup.com/precise64_vmware_fusion.box"
      vm.vmx["displayName"] = "devvm"
    end

    config.vm.provider :virtualbox do |vm, override|
      vm.customize ["modifyvm", :id, "--rtcuseutc", "on"]
      if override.respond_to? :cache
        override.cache.auto_detect = true
      end
    end

    # Static IP for NFS and DNS
    config.vm.network :private_network, ip: "10.1.1.254"

    config = common_config(config)

    config.vm.hostname = ENV["VAGRANT_HOSTNAME"] || "vm"

    # Use VMWare Fusion native shared folders
    config.vm.provider :vmware_fusion do |vm, override|
      override.vm.synced_folder "../..", "/var/govuk"
      override.vm.provision :shell, :inline => "NO_GIT_PULL=1 /var/govuk/puppet/tools/puppet-apply-dev"
    end

    config.vm.provider :virtualbox do |vm, override|
      override.vm.synced_folder "../..", "/var/govuk", :nfs => true
      override.vm.provision :shell, :inline => "NO_GIT_PULL=1 govuk_puppet"
    end

    # You may want to up the memory / CPUs to get better performance in the VM.
    # Example given below to put in Vagrantfile.localconfig if you want to do so:
    #
    #     config.vm.provider :virtualbox do |vm|
    #       vm.customize [ "modifyvm", :id, "--memory", "1024", "--cpus", "2" ]
    #     end
    #     config.vm.provider :vmware_fusion do |vm|
    #       vm.vmx["memsize"] = "1024"
    #       vm.vmx["numvcpus"] = "2"
    #     end

    config = load_local_vagrant_file(config)
  end
end
